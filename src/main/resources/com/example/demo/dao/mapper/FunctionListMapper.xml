<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.mapper.FunctionListMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.dao.entities.FunctionList">
    <result column="FN_GROUP_NO" jdbcType="NVARCHAR" property="fnGroupNo" />
    <result column="FN_NO" jdbcType="NVARCHAR" property="fnNo" />
    <result column="FN_PATH" jdbcType="NVARCHAR" property="fnPath" />
    <result column="FN_SORT" jdbcType="NUMERIC" property="fnSort" />
    <result column="FN_DESC" jdbcType="NVARCHAR" property="fnDesc" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    FN_GROUP_NO, FN_NO, FN_PATH, FN_SORT, FN_DESC
  </sql>
  <select id="selectByExample" parameterType="com.example.demo.dao.entities.FunctionListExample" resultMap="BaseResultMap">
    <include refid="OracleDialectPrefix" />
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from FUNCTION_LIST
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <include refid="OracleDialectSuffix" />
  </select>
  <delete id="deleteByExample" parameterType="com.example.demo.dao.entities.FunctionListExample">
    delete from FUNCTION_LIST
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.demo.dao.entities.FunctionList">
    insert into FUNCTION_LIST (FN_GROUP_NO, FN_NO, FN_PATH, 
      FN_SORT, FN_DESC)
    values (#{fnGroupNo,jdbcType=NVARCHAR}, #{fnNo,jdbcType=NVARCHAR}, #{fnPath,jdbcType=NVARCHAR}, 
      #{fnSort,jdbcType=NUMERIC}, #{fnDesc,jdbcType=NVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.dao.entities.FunctionList">
    insert into FUNCTION_LIST
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="fnGroupNo != null">
        FN_GROUP_NO,
      </if>
      <if test="fnNo != null">
        FN_NO,
      </if>
      <if test="fnPath != null">
        FN_PATH,
      </if>
      <if test="fnSort != null">
        FN_SORT,
      </if>
      <if test="fnDesc != null">
        FN_DESC,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="fnGroupNo != null">
        #{fnGroupNo,jdbcType=NVARCHAR},
      </if>
      <if test="fnNo != null">
        #{fnNo,jdbcType=NVARCHAR},
      </if>
      <if test="fnPath != null">
        #{fnPath,jdbcType=NVARCHAR},
      </if>
      <if test="fnSort != null">
        #{fnSort,jdbcType=NUMERIC},
      </if>
      <if test="fnDesc != null">
        #{fnDesc,jdbcType=NVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.demo.dao.entities.FunctionListExample" resultType="java.lang.Long">
    select count(*) from FUNCTION_LIST
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update FUNCTION_LIST
    <set>
      <if test="record.fnGroupNo != null">
        FN_GROUP_NO = #{record.fnGroupNo,jdbcType=NVARCHAR},
      </if>
      <if test="record.fnNo != null">
        FN_NO = #{record.fnNo,jdbcType=NVARCHAR},
      </if>
      <if test="record.fnPath != null">
        FN_PATH = #{record.fnPath,jdbcType=NVARCHAR},
      </if>
      <if test="record.fnSort != null">
        FN_SORT = #{record.fnSort,jdbcType=NUMERIC},
      </if>
      <if test="record.fnDesc != null">
        FN_DESC = #{record.fnDesc,jdbcType=NVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update FUNCTION_LIST
    set FN_GROUP_NO = #{record.fnGroupNo,jdbcType=NVARCHAR},
      FN_NO = #{record.fnNo,jdbcType=NVARCHAR},
      FN_PATH = #{record.fnPath,jdbcType=NVARCHAR},
      FN_SORT = #{record.fnSort,jdbcType=NUMERIC},
      FN_DESC = #{record.fnDesc,jdbcType=NVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <sql id="OracleDialectPrefix">
    <if test="page != null">
      select * from ( select row_.*, rownum rownum_ from ( 
    </if>
  </sql>
  <sql id="OracleDialectSuffix">
    <if test="page != null">
      <![CDATA[ ) row_ ) where rownum_ > #{page.begin} and rownum_ <= #{page.end} ]]>
    </if>
  </sql>
</mapper>